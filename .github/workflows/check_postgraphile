#!/usr/bin/env python
import subprocess, sys, argparse, time

parser = argparse.ArgumentParser(description="Check the startup of a container from a docker image")
parser.add_argument("image", help="name of the image")
parser.add_argument("--database_name", help="name of the postgres database", default="postgres")
parser.add_argument("--database_user", help="username of the postgres database user", default="postgres")
parser.add_argument("--schemas", help="schemas to expose", default="public")
args = parser.parse_args()

print(args)

cp = subprocess.run(['docker', 'ps', '--latest', '--format', '"{{.ID}}"'], stdout=subprocess.PIPE, stderr=subprocess.PIPE)
container_id = cp.stdout.decode('utf-8').strip().replace('"', '')

print(container_id)
"""
popen = subprocess.Popen(['docker', 'run', '-i',
                          '--network', f'container:{container_id}',
                          '--name', 'test_postgraphile',
                          '-e', f'DATABASE_URL={args.database_name}',
                          '-e', f'SCHEMAS={args.schemas}', args.image],
                         stdout=subprocess.PIPE, stderr=subprocess.PIPE)

stdout, stderr = popen.communicate(timeout=5)
print(f'stdout: {stdout}')
print(f'stderr: {stderr}')
popen.kill()
"""
